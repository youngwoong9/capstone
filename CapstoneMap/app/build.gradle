plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.google.android.libraries.mapsplatform.secrets.gradle.plugin)
}

android {
    namespace 'com.example.capstonemap'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.capstonemap"
        minSdk 34
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'MAPS_API_KEY', "\"YOUR_API_KEY\""
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig = true
        viewBinding = true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1"
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

secrets {
    // To add your Maps API key to this project:
    // 1. If the secrets.properties file does not exist, create it in the same folder as the local.properties file.
    // 2. Add this line, where YOUR_API_KEY is your API key:
    //        MAPS_API_KEY=YOUR_API_KEY
    propertiesFileName = "secrets.properties"

    // A properties file containing default secret values. This file can be
    // checked in version control.
    defaultPropertiesFileName = "local.defaults.properties"

    // Configure which keys should be ignored by the plugin by providing regular expressions.
    // "sdk.dir" is ignored by default.
    ignoreList.add("keyToIgnore") // Ignore the key "keyToIgnore"
    ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.play.services.maps
    implementation libs.androidx.constraintlayout
    implementation libs.play.services.location
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.lombok
    implementation libs.androidx.ui.android
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // BOM (Bill of Materials) for Compose
    implementation platform('androidx.compose:compose-bom:2024.11.00')

    // Other dependencies
    implementation 'androidx.activity:activity-compose:1.9.3'
    implementation 'androidx.compose.material3:material3'
    implementation 'com.google.accompanist:accompanist-themeadapter-material3:0.28.0'

    // Debug implementation for Compose UI tooling
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation "androidx.compose.ui:ui"
    debugImplementation libs.androidx.ui.test.manifest
}